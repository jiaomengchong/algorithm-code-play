package com.jmc.algorithm.greatOffer.class23;

/**
 * 给定一个数组arr，长度为N，从中间切一刀，保证左右都有数，总共N-1种切法，
 * 如此多的切法中，每一种都有绝对值(左部分最大值-右部分最大值)，返回最大的绝对值。
 *
 * @author jmc
 * @version 1.0
 * @date 2021/7/19 22:34
 */
public class Code02_MaxABSBetweenLeftAndRight {
    public static int maxAbsWays1(int[] arr) {
        if (arr == null || arr.length < 2) {
            return 0;
        }

        int N = arr.length;
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < N; i++) {
            max = Math.max(max, arr[i]);
        }

        return max - Math.min(arr[0], arr[N - 1]);
    }

    public static void main(String[] args) {
        int[] arr = new int[]{238, -308, 438, 341, 181, 157, -461, 373, -237, 45, -372, 406, 281, 461, -191, 493, -200, -305, 461, -359, 356, -334, -346, 21, -386, -324, 386, 112, 479, 103, 250, 161, -350, -262, 375, -225, 397, -370, 31, -471, -98, 449, 147, 18, 350, -414, 58, -147, -420, 435, 227, -266, -481, -457, 338, -107, -199, -357, 118, -154, -47, -143, 486, -358, 275, -248, 128, -487, 70, 285, 413, 125, 208, 113, -365, 416, 81, 159, -75, 359, -102, -152, -177, -154, -68, -122, 419, 299, -262, -12, 180, -474, -378, -282, 63, -169, -388, -231, 281, 349, -23, 219, 135, 124, -103, 483, -342, 492, 245, -353, 425, -80, -455, 490, -223, -420, 100, 288, -134, -438, -34, 295, 418, -152, -100, -421, -209, -160, -304, -202, -15, -497, 312, 326, 494, -32, 55, 107, -463, -297, -369, -482, -9, 253, 285, -464, -428, -130, 403, 484, 148, 279, -130, -319, -148, 262, 208, 409, -417, -333, 40, -321, -202, 2, -331, 446, 6, -269, -350, 56, 249, 5, 79, -57, -96, -401, -70, -230, -387, 490, 203, -471, -270, -392, -186, 341, -298, 28, 132, 72, 8, 41, -166, 196, -228, 302, 263, -251, 20, -467};
        System.out.println(maxAbsWays1(arr));
    }
}
